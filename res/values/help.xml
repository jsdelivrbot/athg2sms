<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="helpcontent">
    Anything 2 Sms works with patterns and regular expressions.
    It is designed to support flexible conversion between an input format and your SMS messages.\n
    \n
    First, if your format is not in a pattern, it is needed to look to your exported file. Recognize the patterns used to build the file. You will have two patterns : one for sent messages, one for received messages.\n 
    \n
    For example, look at this Nokia Csv message :
    sms;submit;"0123456789";"";"";"2010.01.11 16:51";"";"Hope you're doing well."\n
    It is composed of a number (or an address), a date, and a body.\n
    Each sent SMS message in your file will thus begin with sms;submit;\"\n
    To put a var, you can use the $(var) format. You will need most of the time three vars : $(address), $(dateXXXX), $(body).\n
    \"date\" is a special var which needs to be completed by a date format. For example, the date in this context is :\n
    2010.01.11 16:51\n
    The recognized format will be : yyyy.MM.dd hh:mm\n
    (because yyyy means year, MM means month, dd means day, hh means hour of the day, mm means minutes). Therefore, your pattern will get on with a $(dateyyyy.MM.dd hh:mm) var.\n
    \n
    The date format pattern used is the one from the SimpleDateFormat Java class.
    \n
    Moreover, the parser does support extra facilities :\n
    - [\\n] is converted into line feed\n
    - [\\t] is converted into a tab\n
    - A pattern can be also written intro brackets (for example : [^\"]+)\n 
    \n
    This is what you should obtain at the end :\n
    sms;submit;$(address);\"\";\"\";\"$(dateyyyy.MM.dd hh:mm)\";\"\";\"$(body)\"[\\n]
    \n\n
    For a more complex example, see iPhone Csv recieved messages format below:\n

    \"Received\",\"$(dateM/d/yy)\",\"$(dateh:mm a)\",\"$(address)\",\"[^\"]*\",\"[^\"]*\",\"[^\"]*\",\"$(body)\",\"[^\"]*\"[\\n]\n
    \n
    Good luck.
    </string>
</resources>